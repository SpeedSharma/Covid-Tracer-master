{"version":3,"sources":["InfoBox.js","Table.js","util.js","LineGraph.js","App.js","index.js"],"names":["InfoBox","title","cases","total","props","Card","onClick","className","CardContent","Typography","color","Table","states","map","state","numeral","format","sortData","data","sort","a","b","prettyPrintStat","stat","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","gridLines","type","time","tooltipFormat","yAxes","ticks","callback","index","values","LineGraph","casesType","useState","setData","useEffect","fetch","then","res","json","chartData","builldChartData","fetchData","lastDataPoint","date","newDataPoint","x","y","push","length","datasets","backgroundColor","lineTension","fill","borderColor","borderDash","App","setStates","worldwide","setWorldWide","stateInfo","setStateInfo","tableData","setTableData","setCasesType","API","stateData","sortedData","getStateData","onStateChange","event","stateName","target","url","newState","filter","eachObj","FormControl","Select","style","variant","onChange","MenuItem","e","isRed","active","todayCases","todayRecovered","recovered","todayDeaths","deaths","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5344ba48.chunk.js","sourcesContent":["import React from 'react'\nimport {Card, CardContent,Typography} from '@material-ui/core'\nimport './InfoBox.css'\n\nfunction InfoBox({title,cases,total,...props}) {\n    return (\n       <Card \n       onClick = {props.onClick}\n       className='infoBox'>\n           <CardContent>\n               <Typography className='infoBox-title' color='textSecondary'>{title}</Typography>\n               <h2 className='infoBox-cases'>{cases}</h2>\n               <Typography className='infoBox-total' color='textSecondary'>{total}</Typography>\n           </CardContent>\n       </Card>\n    )\n}\n\nexport default InfoBox\n","import React from 'react'\nimport './Table.css'\nimport numeral from 'numeral'\n\nfunction Table( {states} ) {\n\n    return <div className='table'>\n        {states.map( ({state, cases}) => \n        <tr>\n        <td>{state}</td>\n        <td><strong>{numeral(cases).format('0,0')}</strong></td>\n        </tr>\n        )}\n    </div>\n    \n}\n\nexport default Table\n","import numeral from 'numeral'\n\nexport const sortData = data => {\n    const sortedData = [...data]\n\n   return sortedData.sort((a,b) => a.cases > b.cases? -1 : 1)\n} \nexport const prettyPrintStat = (stat) =>   stat ? `+${numeral(stat).format('0.0a')}` : null;\n","import React, {useState, useEffect} from 'react'\nimport { Line } from 'react-chartjs-2'\nimport numeral from 'numeral'\nimport './LineGraph.css'\n\nconst options = {\n  legend: {\n    display : false,\n  },\n  elements: {\n    point: {\n      radius: 3,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\")\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {gridLines : {\n        display: false,\n      },\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines : {\n          display: false,\n        },\n        \n        ticks: {\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\")\n          },\n        },\n      },\n    ],\n  },\n}\n\nfunction LineGraph( {casesType = 'cases'} ) {\n\n\n    const [data, setData] = useState({}) \n\n    useEffect(() => {\n\n      const fetchData = async () => {\n        fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=30')\n        .then(res => res.json())\n        .then(data => {\n          const chartData = builldChartData(data,casesType)\n          setData(chartData)\n        })\n      }\n      fetchData()\n    }, [])\n\n    const builldChartData = (data, casesType) => {\n      const chartData = []\n      let lastDataPoint\n     for(let date in data.cases) {\n        if(lastDataPoint){\n          const newDataPoint = {\n            x: date,\n            y: data[casesType][date] - lastDataPoint\n          }\n          chartData.push(newDataPoint)\n        }\n        lastDataPoint = data[casesType][date]\n      }\n      return chartData\n    }\n\n\n    return (\n        <div className='linegraph'>\n          {data?.length > 0 && (\n            <Line \n            options = {options}\n            data= {{\n              \n              datasets: [\n                {\n                  backgroundColor:\"#ff6a00\",\n                  data: data,\n                  lineTension: 0,\n                  fill: false,\n                  borderColor:'#000',\n                  borderDash: [5, 5],\n                },\n              ],\n            }} />\n          )}\n        </div>\n    )\n}\n\nexport default LineGraph\n","import React,{useState,useEffect} from 'react' \nimport './App.css';\nimport {MenuItem,FormControl, Select,Card, CardContent} from '@material-ui/core'\nimport InfoBox from './InfoBox';\nimport Table from './Table';\nimport { prettyPrintStat, sortData } from './util';\nimport LineGraph from './LineGraph'\nimport numeral from 'numeral'\n\nfunction App() {\n\n  const [states, setStates] = useState([])\n  const [worldwide, setWorldWide] = useState('worldwide')\n  const [stateInfo, setStateInfo] = useState({})\n  const [tableData, setTableData] = useState([])\n  const [casesType, setCasesType] = useState('cases')\n\n\n  const API = 'https://disease.sh/v3/covid-19/gov/India'\n\n\n  useEffect(() => {\n       const getStateData = async () => {\n        await fetch(API)\n        .then(res => res.json())\n        .then(data => {\n          const stateData = data.states.map((state) => ({\n            state: state.state,\n            cases: state.cases,\n          }))\n\n          const sortedData = sortData(stateData)\n          setTableData(sortedData)\n          setStates(stateData)\n        })\n       }\n       getStateData()\n\n       // default displayed data\n       fetch('https://disease.sh/v3/covid-19/all')\n       .then(res => res.json())\n       .then(data => {\n         setStateInfo(data)\n       })\n  },[])\n\n    const onStateChange = async (event) => {\n      const stateName = event.target.value;\n      \n    let url = '';\n\n    if(stateName === 'worldwide'){\n      url = 'https://disease.sh/v3/covid-19/all'\n\n      await fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        setWorldWide(stateName)\n        setStateInfo(data)\n      })\n    } else {\n      url = API \n\n      await fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        setWorldWide(stateName)\n        let newState = data.states.filter( \n          eachObj => eachObj.state === stateName); \n        setStateInfo(newState[0])\n      })\n    }\n }\n\n  return (\n    <div className=\"app\">\n     <div className=\"app-header\">\n      <h1>Covid <span>Tracer</span></h1>\n    <FormControl>\n      <Select\n      style={{\n        \"background\":'#fff',\n        'color':'rgb(39, 13, 82)',\n        'font-size':'1.5rem',\n        'text-align':'center',\n        'border-radius':'25px',\n        'font-family':'serif',\n        'font-weight': 'bold'\n      }}\n      variant='outlined' value={worldwide} onChange={onStateChange}>\n      <MenuItem\n      value='worldwide'>WorldWide</MenuItem> \n    {states.map( state => <MenuItem value={state.state}>{state.state}</MenuItem> )}\n      </Select>\n    </FormControl>\n      </div>\n\n    <div className=\"app-stats\">\n    <InfoBox\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            isRed\n            active={casesType === \"cases\"}\n            cases={prettyPrintStat(stateInfo.todayCases)}\n            total={numeral(stateInfo.cases).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            active={casesType === \"recovered\"}\n            cases={prettyPrintStat(stateInfo.todayRecovered)}\n            total={numeral(stateInfo.recovered).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={prettyPrintStat(stateInfo.todayDeaths)}\n            total={numeral(stateInfo.deaths).format(\"0.0a\")}\n          />\n    </div>\n\n    <Card>\n    <CardContent>\n      <h3>Live Cases by States</h3>\n    <Table states = {tableData} />\n      <h3 className=\"cases\">Cases</h3>\n    <LineGraph className='line'\n    casesType={casesType} />\n    <h3 className=\"recovered\">Recovered</h3>\n    <LineGraph casesType='recovered' />\n    <h3 className=\"deaths\">Deaths</h3>\n    <LineGraph casesType='deaths' />\n    </CardContent>\n     </Card>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}